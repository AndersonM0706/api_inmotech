-- lo siguiente que esta despues de este comentario es para los usuarios de la api
-- Tabla de roles
CREATE TABLE `role` (
  `Role_id` INT AUTO_INCREMENT PRIMARY KEY,
  `Role_name` VARCHAR(50) NOT NULL,
  `Role_description` VARCHAR(255),
  `Role_status` TINYINT(1) DEFAULT 1, -- 1=activo, 0=inactivo
  `Role_priority` INT DEFAULT 0,
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tabla de estados de usuario mejorada
CREATE TABLE `user_status` (
  `User_status_id` INT AUTO_INCREMENT PRIMARY KEY,
  `User_status_name` VARCHAR(50) NOT NULL,
  `User_status_description` VARCHAR(255),
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tabla de usuarios
CREATE TABLE `users` (
  `User_id` INT AUTO_INCREMENT PRIMARY KEY,
  `User_user` VARCHAR(100) NOT NULL,
  `User_password` VARCHAR(255) NOT NULL,
  `User_status_FK` INT NOT NULL,
  `Role_FK` INT NOT NULL,
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
  FOREIGN KEY (`User_status_FK`) REFERENCES `user_status`(`User_status_id`),
  FOREIGN KEY (`Role_FK`) REFERENCES `role`(`Role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tabla de módulos
CREATE TABLE `module` (
  `Module_id` INT AUTO_INCREMENT PRIMARY KEY,
  `Module_name` VARCHAR(50) NOT NULL,
  `Module_route` VARCHAR(100),
  `Module_description` VARCHAR(255),
  `Module_icon` VARCHAR(100),                -- Icono para mostrar en la interfaz (opcional)
  `Module_status` TINYINT(1) DEFAULT 1,      -- 1=activo, 0=inactivo
  `Module_order` INT DEFAULT 0,              -- Orden de aparición en menús
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Tabla de permisos
CREATE TABLE `permitions` (
  `Permitions_id` INT AUTO_INCREMENT PRIMARY KEY,
  `Permitions_name` VARCHAR(50) NOT NULL,
  `Permitions_description` VARCHAR(255),
  `Permitions_status` TINYINT(1) DEFAULT 1,      -- 1=activo, 0=inactivo
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP, -- Fecha de creación
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- Última actualización
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Relación entre módulos y roles
CREATE TABLE `module_role` (
  `Module_role_id` INT AUTO_INCREMENT PRIMARY KEY,
  `Module_FK` INT NOT NULL,
  `Role_FK` INT NOT NULL,
  `Module_role_status` TINYINT(1) DEFAULT 1,      -- 1=activo, 0=inactivo
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP, -- Fecha de creación
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Última actualización
  FOREIGN KEY (`Module_FK`) REFERENCES `module`(`Module_id`),
  FOREIGN KEY (`Role_FK`) REFERENCES `role`(`Role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Relación entre permisos, módulos y roles
CREATE TABLE `permitions_module_role` (
  `Permitions_module_role_id` INT AUTO_INCREMENT PRIMARY KEY,
  `Module_role_FK` INT NOT NULL,
  `Permitions_FK` INT NOT NULL,
  `Permitions_module_role_status` TINYINT(1) DEFAULT 1,      -- 1=activo, 0=inactivo
  `Created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,           -- Fecha de creación
  `Updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Última actualización
  FOREIGN KEY (`Module_role_FK`) REFERENCES `module_role`(`Module_role_id`),
  FOREIGN KEY (`Permitions_FK`) REFERENCES `permitions`(`Permitions_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Relaciones para la gestión de usuarios, roles, módulos y permisos

-- users -> user_status
ALTER TABLE `users`
  ADD CONSTRAINT `users_user_status_fk`
    FOREIGN KEY (`User_status_FK`) REFERENCES `user_status` (`User_status_id`);

-- users -> role
ALTER TABLE `users`
  ADD CONSTRAINT `users_role_fk`
    FOREIGN KEY (`Role_FK`) REFERENCES `role` (`Role_id`);

-- module_role -> module
ALTER TABLE `module_role`
  ADD CONSTRAINT `module_role_module_fk`
    FOREIGN KEY (`Module_FK`) REFERENCES `module` (`Module_id`);

-- module_role -> role
ALTER TABLE `module_role`
  ADD CONSTRAINT `module_role_role_fk`
    FOREIGN KEY (`Role_FK`) REFERENCES `role` (`Role_id`);

-- permitions_module_role -> module_role
ALTER TABLE `permitions_module_role`
  ADD CONSTRAINT `permitions_module_role_module_role_fk`
    FOREIGN KEY (`Module_role_FK`) REFERENCES `module_role` (`Module_role_id`);

-- permitions_module_role -> permitions
ALTER TABLE `permitions_module_role`
  ADD CONSTRAINT `permitions_module_role_permitions_fk`
    FOREIGN KEY (`Permitions_FK`) REFERENCES `permitions` (`Permitions_id`);

-- Seeders para la tabla role
INSERT INTO `role` (`Role_name`, `Role_description`, `Role_status`, `Role_priority`)
VALUES
  ('Admin', 'Administrador del sistema', 1, 1),
  ('User', 'Usuario estándar', 1, 2),
  ('Guest', 'Usuario invitado', 1, 3);

-- Seeders para la tabla user_status
INSERT INTO `user_status` (`User_status_name`, `User_status_description`)
VALUES
  ('Activo', 'Usuario activo'),
  ('Inactivo', 'Usuario inactivo'),
  ('Suspendido', 'Usuario suspendido');

-- Seeders para la tabla users (ejemplo, debes cambiar las contraseñas por hashes reales)
INSERT INTO `users` (`User_user`, `User_password`, `User_status_FK`, `Role_FK`)
VALUES
  ('admin@api.com', 'admin123', 1, 1),
  ('user@api.com', 'user123', 1, 2);

-- Seeders para la tabla module
INSERT INTO `module` (`Module_name`, `Module_route`, `Module_description`, `Module_icon`, `Module_status`, `Module_order`)
VALUES
  ('Usuarios', '/api/users', 'Gestión de usuarios', 'user-icon', 1, 1),
  ('Roles', '/api/roles', 'Gestión de roles', 'role-icon', 1, 2),
  ('Permisos', '/api/permitions', 'Gestión de permisos', 'perm-icon', 1, 3);

-- Seeders para la tabla permitions
INSERT INTO `permitions` (`Permitions_name`, `Permitions_description`, `Permitions_status`)
VALUES
  ('create', 'Crear registros', 1),
  ('read', 'Leer registros', 1),
  ('update', 'Actualizar registros', 1),
  ('delete', 'Eliminar registros', 1);

-- Seeders para la tabla module_role
INSERT INTO `module_role` (`Module_FK`, `Role_FK`, `Module_role_status`)
VALUES
  (1, 1, 1), -- Admin en Usuarios
  (2, 1, 1), -- Admin en Roles
  (3, 1, 1), -- Admin en Permisos
  (1, 2, 1), -- User en Usuarios
  (2, 2, 1); -- User en Roles

-- Seeders para la tabla permitions_module_role
INSERT INTO `permitions_module_role` (`Module_role_FK`, `Permitions_FK`, `Permitions_module_role_status`)
VALUES
  (1, 1, 1), -- Admin en Usuarios puede crear
  (1, 2, 1), -- Admin en Usuarios puede leer
  (1, 3, 1), -- Admin en Usuarios puede actualizar
  (1, 4, 1), -- Admin en Usuarios puede eliminar
  (4, 2, 1); -- User en Usuarios puede leer

----------------------------------------------------------------------------------------------------------------------

